# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  - master

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  GO111MODULE: 'on' # Enable go module
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Set up the Go workspace'
- task: DownloadGitHubRelease@0
  inputs:
    connection: github-download
    userRepository: goreleaser/goreleaser
    itemPattern: goreleaser_Linux_x86_64.tar.gz
    downloadPath: $(GOPATH)/bin
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: $(GOPATH)/bin/goreleaser_Linux_x86_64.tar.gz
    destinationFolder: $(GOPATH)/bin
    cleanDestinationFolder: false
- script: |
    goreleaser --rm-dist --snapshot
    cp ./dist/linux_amd64/* '$(System.ArtifactsDirectory)'
    echo '$(System.ArtifactsDirectory)'
    ls '$(System.ArtifactsDirectory)'
  workingDirectory: '$(modulePath)'
  displayName: 'Deps, test and build'

